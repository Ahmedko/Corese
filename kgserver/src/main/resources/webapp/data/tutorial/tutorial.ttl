#
# Query definitions for a SPARQL tutorial based on a transformation
#
# Olivier Corby - Wimmics Inria I3S - 2015
#

@base <http://corese.inria.fr/data/>
#@base <http://localhost:8080/data/>
st:tutorial2 a st:Server ;
  st:data     [ st:uri <tutorial/human.rdf>  ; st:name st:data ] ;
  st:schema   [ st:uri <tutorial/human.rdfs> ; st:name st:schema ] ;
  st:context  [ st:uri <tutorial/tutorial.ttl>  ; st:name st:context ] .


[] a st:Query ;
st:name st:all ;
rdfs:label "Triple Pattern" ;
rdfs:comment "Ecrire une requête qui retourne tout le graphe"@fr ;
rdfs:comment "Return the whole graph"@en ;

st:query 
"""
select * where { 
   
}""" ;

st:solution 
"""
select * where { 
   ?x ?p ?y
}""" 
.


[] a st:Query ;
st:name st:type ;
rdfs:label "Type" ;
rdfs:comment "Retourner les instances du type personne."@fr ;
rdfs:comment "Return instances of type person."@en ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x  h:Person 
}""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person 
}""" 
.


[] a st:Query ;
st:name st:bnode ;
rdfs:label "Blank Node" ;
rdfs:comment "Les blank nodes sont des variables anonymes qui ne sont pas retournées dans le résultat."@fr ;
rdfs:comment "Blank nodes are anonymous variables that are not returned in the result."@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#QSynBlankNodes> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person ;
  h:hasFriend  
}""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person ;
  h:hasFriend []
}""" 

.


[] a st:Query ;
st:name st:list ;
rdfs:label "List" ;
rdfs:comment """Enumérer les trois éléments d'une liste."""@fr ;
rdfs:comment """Enumerate list elements."""@en ;
#st:reference <http://www.w3.org/TR/sparql11-query/#propertypaths> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where {
  ?x h:list ( )
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where {
  ?x h:list (?a ?b ?c)
}
""" 
.

[] a st:Query ;
st:name st:bgp ;
rdfs:label "BGP" ;
rdfs:comment "Retourne les instances de personne ayant un nom."@fr ;
rdfs:comment "Return instances of person having a name."@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#BasicGraphPatterns> ;
st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person ;
    h:name ?n
}""" 
.

[] a st:Query ;
st:name st:count ;
rdfs:label "Count" ;
rdfs:comment """Compter le nombre de solution avec un opérateur d'aggrégation."""@fr ;
rdfs:comment """Count the number of results using an aggregate operator."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#aggregates> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select (    as ?c) where { 
  ?x ?p ?y 
}""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select (count(*) as ?c) where { 
  ?x ?p ?y 
}""" 

.

[] a st:Query ;
st:name st:group ;
rdfs:label "Group By" ;
rdfs:comment """Compter le nombre de solutions. Retourner un  résultat pour chaque valeur de ?x."""@fr ;
rdfs:comment """Count the number of solutions. Return one result for each value of ?x."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#GroupPatterns> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x (count(*) as ?c) where { 
   ?x h:hasChild ?y 
} 

""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x (count(*) as ?c) where { 
   ?x h:hasChild ?y 
} 
group by ?x
"""
.


[] a st:Query ;
st:name st:gconcat ;
rdfs:label "Group concat" ;
rdfs:comment """Concaténer la liste des amis pour chaque valeur de ?x."""@fr ;
rdfs:comment """Concatenate the list of friends."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#GroupPatterns> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x (  as ?l) where { 
   ?x h:hasChild ?y 
   ?y h:name ?n
} 
group by ?x
""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x (group_concat(?n) as ?l) where { 
   ?x h:hasChild ?y 
   ?y h:name ?n
} 
group by ?x
""" 

.


[] a st:Query ;
st:name st:having ;
rdfs:label "Having" ;
rdfs:comment """Compter le nombre de solutions. Retourne un  résultat pour chaque valeur de ?x dont le compteur est > 1."""@fr ;
rdfs:comment """Count the number of solutions, return  results where value of counter > 1."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#GroupPatterns> ;


st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x (count(*) as ?c) where { 
   ?x h:hasChild ?y 
} 
group by ?x
having (  )
""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x (count(*) as ?c) where { 
   ?x h:hasChild ?y 
} 
group by ?x
having (count(*) > 1)
""" 
.



[] a st:Query ;
st:name st:order ;
rdfs:label "Order" ;
rdfs:comment "Retourner les ressources instance de type personne, triées par ordre alphabétique."@fr ;
rdfs:comment "Return instances of person in alphabetical order."@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#modOrderBy> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person ;
  h:name ?n
}

""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person ;
  h:name ?n
}
order by ?n

""" 
.


[] a st:Query ;
st:name st:distinct ;
rdfs:label "Distinct" ;
rdfs:comment "Retourner des résultats distincts."@fr ;
rdfs:comment "Return distinct results."@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#modDuplicates> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select distinct ?x ?y where { 
  ?x ?p ?v .
  ?y ?p ?v
  values ?p {  h:shoesize h:shirtsize }
}

""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select distinct ?x ?y where { 
  ?x ?p ?v .
  ?y ?p ?v
  values ?p {  h:shoesize h:shirtsize }
}
order by ?x ?y""" 
.



[] a st:Query ;
st:name st:filter ;
rdfs:label "Filter" ;
rdfs:comment """Retourner les ressources  ayant un nom  qui contient la lettre 'l'."""@fr ;
rdfs:comment """Return resources with name containing letter 'l'."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#expressions> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x h:name ?n
  filter(  )
}
""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x h:name ?n
  filter(strcontains(?n, "l"))
}
""" 
.


[] a st:Query ;
st:name st:lang ;
rdfs:label "Language" ;
rdfs:comment """Retourner les ressources  ayant un nom  taggé en français."""@fr ;
rdfs:comment """Return resources with name tagged in french."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#expressions> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x h:name ?n
  filter(  )
}
""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x h:name ?n
  filter(lang(?n) = "fr")
}
""" 
.

[] a st:Query ;
st:name st:datatype ;
rdfs:label "Datatype" ;
rdfs:comment """Retourner les datatypes des littéraux."""@fr ;
rdfs:comment """Return literals with a datatype value."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#expressions> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * (   as ?d) where { 
  ?x ?p ?v
  filter (strstarts(?p, h:))
  filter (isLiteral(?v))
}
""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * (datatype(?v) as ?d) where { 
  ?x ?p ?v
  filter (strstarts(?p, h:))
  filter (isLiteral(?v))
}
""" 
.


[] a st:Query ;
st:name st:date ;
rdfs:label "Date" ;
rdfs:comment """Décomposer la date."""@fr ;
rdfs:comment """Return the date."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#expressions> ;

st:query 
"""
select (now() as ?n)
  (year(?n) as ?y)
  (	as ?m)
  (	as ?d)
  (	as ?hr)
  ( 	as ?mn)
  (	as ?sc)
where { 
 
}

""" ;

st:solution 
"""
select (now() as ?n)
  (year(?n) 	as ?y)
  (month(?n) 	as ?m)
  (day(?n) 	as ?d)
  (hours(?n) 	as ?hr)
  (minutes(?n) 	as ?mn)
  (seconds(?n) 	as ?sc)
where { 
 
}
""" 

.


[] a st:Query ;
st:name st:regex ;
rdfs:label "Regex" ;
rdfs:comment """Retourner les URI qui matchent une expression régulière."""@fr ;
rdfs:comment """Return URI that match a regular expression."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#expressions> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select *
where { 
  ?x a ?t 
  filter (  )  
}
""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select *
where { 
  ?x a ?t 
  filter (regex(str(?x), "inria.fr"))
}
""" 

.




[] a st:Query ;
st:name st:if ;
rdfs:label "If Then Else" ;
rdfs:comment """Retourner 'majeur' ou 'mineur' selon l'age."""@fr ;
rdfs:comment """If then else."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#func-if> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * (  as ?s) where { 
  ?x h:age ?a
}
""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * (if (?a >= 18, "majeur", "mineur") as ?s) where { 
  ?x h:age ?a
}
""" 


.



[] a st:Query ;
st:name st:union ;
rdfs:label "Union" ;
rdfs:comment """Retourner les  instances de Man ou Woman."""@fr ;
rdfs:comment """Return instances of Man or Woman."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#alternatives> ;

st:query 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  { ?x a h:Man }     { ?x a h:Woman }
}
""" ;

st:solution 
"""
prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  { ?x a h:Man } union { ?x a h:Woman }
}
""" 


.



[] a st:Query ;
st:name st:optional ;
rdfs:label "Optional" ;
rdfs:comment """Retourner les ressources ?x instance de Man ayant éventuellement un conjoint. """@fr ;
rdfs:comment """Return instances of Man possibly having a spouse."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#optionals> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Man  
        { ?x h:hasSpouse ?s }
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Man  
  optional { ?x h:hasSpouse ?s }
}
""" 
.


[] a st:Query ;
st:name st:exists ;
rdfs:label "Exists" ;
rdfs:comment """Retourner les ressources ?x instance de Man ayant  un conjoint. """@fr ;
rdfs:comment """Return instances of Man having a spouse. """@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#neg-pattern> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Man  
  filter  {    }
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Man  
  filter exists { ?x h:hasSpouse ?s }
}
""" 
.

[] a st:Query ;
st:name st:notexists ;
rdfs:label "Not Exists" ;
rdfs:comment """Retourner les  instances de Man n'ayant  pas de conjoint. """@fr ;
rdfs:comment """Return instances of Man not having a spouse. """@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#neg-pattern> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Man  
  filter  {  }
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Man  
  filter not exists { ?x h:hasSpouse ?s }
}
""" 
.


[] a st:Query ;
st:name st:minus ;
rdfs:label "Minus" ;
rdfs:comment """Retourner les ressources ?x instance de Woman n'ayant pas de conjoint. """@fr ;
rdfs:comment """Return instances of Man not having a spouse. """@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#neg-minus> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Woman  
       { ?x h:hasSpouse ?s }
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Woman  
  minus { ?x h:hasSpouse ?s }
}
""" 

.




[] a st:Query ;
st:name st:graph ;
rdfs:label "Named Graph" ;
rdfs:comment """Retourner le (ou les) graphe nommé dans lequel se trouvent des solutions."""@fr ;
rdfs:comment """Return  named graph(s) where there are solutions."""@en ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
        {
  ?x a h:Woman  
  }
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
graph ?g {
  ?x a h:Woman  
  }
}
""" 
.


[] a st:Query ;
st:name st:from ;
rdfs:label "From" ;
rdfs:comment """Spécifier le graphe nommé kg:data utilisé pour constituer le graphe par défaut. """@fr ;
rdfs:comment """Specify the named graph(s) used to form the default graph. """@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#unnamedGraph> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
prefix st: <http://ns.inria.fr/sparql-template/>
select * 

where { 
   ?x ?p ?y
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
prefix st: <http://ns.inria.fr/sparql-template/>
select * 
from st:data
where { 
   ?x ?p ?y
}
""" 
.

[] a st:Query ;
st:name st:from-named ;
rdfs:label "From Named" ;
rdfs:comment """Spécifier le  graphe nommé kg:data sur lequel l'énoncé graph ?g sera évalué """@fr ;
rdfs:comment """Specify the named graphs where the named graph pattern is evaluated."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#namedGraphs> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
prefix st: <http://ns.inria.fr/sparql-template/>
select * 

where { 
   graph ?g { ?x ?p ?y }
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
prefix st: <http://ns.inria.fr/sparql-template/>
select * 
from named st:data
where { 
   graph ?g { ?x ?p ?y }
}
""" 
.


[] a st:Query ;
st:name st:subquery ;
rdfs:label "Subquery" ;
rdfs:comment """Calculer l'age min et l'age max dans une sous-requête emboîtée, trouver les ressources ayant l'age min et celles ayant l'age max"""@fr ;
rdfs:comment """Execute part of the query in a nested subquery."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#subqueries> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 

  {select (  as ?max) (   as ?min) 
   where {
     ?x a h:Person ;
       h:age ?age 
  }}
  
  ?x h:age ?age 
  filter(?age in (?min, ?max))
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 

  {select (max(?age) as ?max) (min(?age) as ?min) 
   where {
     ?x a h:Person ;
       h:age ?age 
  }}
  
  ?x h:age ?age 
  filter(?age in (?min, ?max))
}
""" 

.


[] a st:Query ;
st:name st:bind ;
rdfs:label "Bind" ;
rdfs:comment """Créer une variable pour le résultat d'un calcul sur ?n."""@fr ;
rdfs:comment """Create a variable for the result of a computation."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#bind> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person ;
    h:name ?n .
    bind (  )
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person ;
    h:name ?n .
    bind (ucase(?n) as ?u)
}
""" 
.


[] a st:Query ;
st:name st:values ;
rdfs:label "Values" ;
rdfs:comment """Fixer les valeurs de la variable ?n à 'John', 'Alice' et 'Lucas'."""@fr ;
rdfs:comment """Set values of some variables."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#inline-data> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
    ?x h:name ?n ;
    optional { ?x h:age  ?a } 
    values    {    }
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
    ?x h:name ?n ;
    optional { ?x h:age  ?a } 
    values ?n { "John" "Alice" "Lucas" }
}
""" 


.


[] a st:Query ;
st:name st:path ;
rdfs:label "Property Path" ;
rdfs:comment """Retourner les ressources reliées par un chemin de propriétés h:hasFriend. """@fr ;
rdfs:comment """Return resources related by a property path. """@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#propertypaths> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person .
  ?x      ?y
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * where { 
  ?x a h:Person .
  ?x h:hasFriend+ ?y
}
""" 
.


[] a st:Query ;
st:name st:dbpedia ;
rdfs:label "Service" ;
rdfs:comment """Interroger le SPARQL endpoint http://fr.dbpedia.org/sparql."""@fr ;
rdfs:comment """Query fr.dbpedia.org SPARQL endpoint."""@en ;
st:reference <http://www.w3.org/TR/sparql11-federated-query/#service> ;

st:query 
"""
select * where { 
       <http://fr.dbpedia.org/sparql> {
   select * where {
     <http://fr.dbpedia.org/resource/Antibes> ?p ?y 
   }
   limit 20 
   offset 20
  }
}
""" ;

st:solution 
"""
select * where { 
  service <http://fr.dbpedia.org/sparql> {
   select * where {
     <http://fr.dbpedia.org/resource/Antibes> ?p ?y 
   }
   limit 20 
   offset 20
  }
}
""" 
.


[] a st:Query ;
st:name st:construct ;
rdfs:label "Construct" ;
rdfs:comment """Construire un graphe résultat."""@fr ;
rdfs:comment """Create a result graph."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#construct> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
     {
  ?x h:hasFriend ?y
}
where { 
  ?x a h:Person .
  ?x h:hasFriend+ ?y .
}
""" ;


st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
construct {
  ?x h:hasFriend ?y
}
where { 
  ?x a h:Person .
  ?x h:hasFriend+ ?y .
}
"""

.


[] a st:Query ;
st:name st:describe ;
rdfs:label "Describe" ;
rdfs:comment """Décrire la ressource ?x."""@fr ;
rdfs:comment """Describe a resource."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#describe> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
     ?x where {
  ?x h:age 12 .
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
describe ?x where {
  ?x h:age 12 .
}
""" 
.


[] a st:Query ;
st:name st:ask ;
rdfs:label "Ask" ;
rdfs:comment """Répondre par vrai ou faux."""@fr ;
rdfs:comment """Answer true of false."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#ask> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
      {
  ?x h:age 12 .
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
ask  {
  ?x h:age 12 .
}
""" 
.



#######################################################




[] a st:Query ;
st:name st:listpp ;
rdfs:label "List Path" ;
rdfs:comment """Enumérer les éléments d'une liste avec un chemin sur les propriétés rdf:rest et rdf:first."""@fr ;
rdfs:comment """Enumerate list elements using a path."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#propertypaths> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x ?e where {
  ?x h:list ?l
  ?l      ?e
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x ?e where {
  ?x h:list ?l
  ?l rdf:rest*/rdf:first ?e
}
""" 
.


[] a st:Query ;
st:name st:position ;
rdfs:label "List Position" ;
rdfs:comment """Enumérer les éléments d'une liste en donnant leur position."""@fr ;
rdfs:comment """Enumerate list elements using a path with the elements position."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#propertypaths> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x ?e (count(?mid) as ?pos) where {
  ?x h:list ?l
 
 
  ?node rdf:first ?e
}
group by ?node
order by ?pos
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x ?e (count(?mid) as ?pos) where {
  ?x h:list ?l
  ?l rdf:rest* ?mid 
  ?mid rdf:rest* ?node
  ?node rdf:first ?e
}
group by ?node
order by ?pos
""" 
.



[] a st:Query ;
st:name st:subsume ;
rdfs:label "Subsumption" ;
rdfs:comment """Retourner les instances de la classe h:Person, et de ses sous-classes, en utilisant un chemin."""@fr ;
rdfs:comment """Return class instances using a path."""@en ;
st:reference <http://www.w3.org/TR/sparql11-query/#propertypaths> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x where {
  ?x      h:Person
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select ?x where {
  ?x rdf:type/rdfs:subClassOf* h:Person
}
""" 
.


[] a st:Query ;
st:name st:rdfs ;
rdfs:label "RDFS Entailments" ;
rdfs:comment """Enumérer les déductions RDFS  en interrogeant le graphe kg:entailment (il n'y a peut être pas de réponse)."""@fr ;
rdfs:comment """Enumerate RDFS entailments."""@en ;
#st:reference <http://www.w3.org/TR/sparql11-query/#propertypaths> ;

st:query 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * 

where {
  ?x ?p ?y 
}
""" ;

st:solution 
"""prefix h: <http://www.inria.fr/2007/humans.rdfs#>
select * 
from kg:entailment
where {
  ?x ?p ?y 
}
""" 
.







[] a st:Query ;
st:name st:queries ;
rdfs:label "Queries" ;
rdfs:comment """Enumère les requêtes."""@fr ;
rdfs:comment """Enumerate queries."""@en ;
#st:reference <http://www.w3.org/TR/sparql11-query/#propertypaths> ;
st:query 
"""
select ?q  
where {
  graph st:context { ?x st:query ?q }
}
""" 
.






















