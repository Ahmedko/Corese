<?xml version="1.0" encoding="UTF-8"?>

<ClassDiagram name="Reverse engineered main.java.fr.inria.edelweiss.kgdqp.core 2015.03.17 13-49-22-298">
  <ClassDiagramComponents>
    <Class xPosition="20.0" yPosition="20.0" package="fr.inria.edelweiss.kgdqp.core" name="CallableBufferedGetEdges" visibility="public">
      <Constructors>
        <Constructor name="CallableBufferedGetEdges" visibility="public">
          <Argument type="Producer" name="p"/>
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Environment" name="env"/>
          <Argument type="SyncEdgeBuffer" name="buf"/>
        </Constructor>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isFinal="true"/>
        <Field name="p" visibility="private" type="Producer"/>
        <Field name="gNode" visibility="private" type="Node"/>
        <Field name="from" visibility="private" type="List&lt;Node&gt;"/>
        <Field name="qEdge" visibility="private" type="Edge"/>
        <Field name="env" visibility="private" type="Environment"/>
        <Field name="buffer" visibility="private" type="SyncEdgeBuffer"/>
      </Fields>
      <Methods>
        <Method name="call" visibility="public" returnType="Iterable&lt;Entity&gt;"/>
      </Methods>
    </Class>
    <Class xPosition="320.0" yPosition="20.0" package="fr.inria.edelweiss.kgdqp.core" name="CentralizedInferrencing" visibility="public">
      <Constructors/>
      <Fields>
        <Field name="logger" visibility="package" type="Logger" isStatic="true"/>
        <Field name="pertinentRulesQueryOumy" visibility="package" type="String" isStatic="true" isFinal="true"/>
        <Field name="pertinentRulesQuery" visibility="package" type="String" isStatic="true" isFinal="true"/>
        <Field name="allRulesQuery" visibility="package" type="String" isStatic="true" isFinal="true"/>
      </Fields>
      <Methods>
        <Method name="main" visibility="public" returnType="void" isStatic="true">
          <Argument type="String" name="args"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="620.0" yPosition="20.0" package="fr.inria.edelweiss.kgdqp.core" name="CentRuleEngineThread" visibility="public">
      <Constructors>
        <Constructor name="CentRuleEngineThread" visibility="public">
          <Argument type="RuleEngine" name="ruleEngine"/>
        </Constructor>
      </Constructors>
      <Fields>
        <Field name="ruleEngine" visibility="private" type="RuleEngine"/>
      </Fields>
      <Methods>
        <Method name="run" visibility="public" returnType="void"/>
      </Methods>
    </Class>
    <Class xPosition="920.0" yPosition="20.0" package="fr.inria.edelweiss.kgdqp.core" name="RemoteSqlProducerImpl" visibility="public">
      <Constructors>
        <Constructor name="RemoteSqlProducerImpl" visibility="public">
          <Argument type="String" name="url"/>
          <Argument type="String" name="driver"/>
          <Argument type="String" name="login"/>
          <Argument type="String" name="password"/>
        </Constructor>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isStatic="true"/>
        <Field name="url" visibility="private" type="String"/>
        <Field name="rdfSqlMappings" visibility="private" type="Map&lt;String, String&gt;"/>
        <Field name="sqlHasForName" visibility="private" type="String" isFinal="true"/>
        <Field name="sqlIsReferredToBy" visibility="private" type="String" isFinal="true"/>
        <Field name="sqlHasForSubjectIdentifier" visibility="private" type="String" isFinal="true"/>
        <Field name="sqlInvolvesHasPatient" visibility="private" type="String" isFinal="true"/>
      </Fields>
      <Methods>
        <Method name="init" visibility="public" returnType="void">
          <Argument type="int" name="nbNodes"/>
          <Argument type="int" name="nbEdges"/>
        </Method>
        <Method name="setMode" visibility="public" returnType="/**
     * propagate to the server ? nothing
     */
void">
          <Argument type="int" name="n"/>
        </Method>
        <Method name="getGraphNodes" visibility="public" returnType="Iterable&lt;Node&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="isGraphNode" visibility="public" returnType="boolean">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="getEdges" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="getNodes" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Node" name="qNode"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="initPath" visibility="public" returnType="void">
          <Argument type="Edge" name="qEdge"/>
          <Argument type="int" name="index"/>
        </Method>
        <Method name="getNodes" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Environment" name="env"/>
          <Argument type="List&lt;Regex&gt;" name="exp"/>
          <Argument type="int" name="index"/>
        </Method>
        <Method name="getEdges" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Environment" name="env"/>
          <Argument type="Regex" name="exp"/>
          <Argument type="Node" name="src"/>
          <Argument type="Node" name="start"/>
          <Argument type="int" name="index"/>
        </Method>
        <Method name="getNode" visibility="public" returnType="Node">
          <Argument type="Object" name="value"/>
        </Method>
        <Method name="isBindable" visibility="public" returnType="boolean">
          <Argument type="Node" name="node"/>
        </Method>
        <Method name="toNodeList" visibility="public" returnType="List&lt;Node&gt;">
          <Argument type="Object" name="value"/>
        </Method>
        <Method name="map" visibility="public" returnType="Mappings">
          <Argument type="List&lt;Node&gt;" name="qNodes"/>
          <Argument type="Object" name="object"/>
        </Method>
        <Method name="bound" visibility="public" returnType="boolean">
          <Argument type="Edge" name="edge"/>
          <Argument type="Filter" name="filter"/>
        </Method>
        <Method name="getSparqlQuery" visibility="public" returnType="String">
          <Argument type="Edge" name="edge"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="processValueConstraints" visibility="public" returnType="String">
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Edge" name="bEdge"/>
        </Method>
        <Method name="extractDatasetId" visibility="public" returnType="String">
          <Argument type="Node" name="n"/>
        </Method>
        <Method name="extractSubjectId" visibility="public" returnType="String">
          <Argument type="Node" name="n"/>
        </Method>
        <Method name="extractStudyId" visibility="public" returnType="String">
          <Argument type="Node" name="n"/>
        </Method>
        <Method name="isProducer" visibility="public" returnType="boolean">
          <Argument type="Node" name="node"/>
        </Method>
        <Method name="getProducer" visibility="public" returnType="Producer">
          <Argument type="Node" name="node"/>
        </Method>
        <Method name="getGraph" visibility="public" returnType="Object"/>
        <Method name="getMode" visibility="public" returnType="int"/>
        <Method name="setGraphNode" visibility="public" returnType="void">
          <Argument type="Node" name="n"/>
        </Method>
        <Method name="getGraphNode" visibility="public" returnType="Node"/>
      </Methods>
    </Class>
    <Class xPosition="20.0" yPosition="420.0" package="fr.inria.edelweiss.kgdqp.core" name="CallableGetEdges" visibility="public">
      <Constructors>
        <Constructor name="CallableGetEdges" visibility="public">
          <Argument type="Producer" name="p"/>
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Environment" name="env"/>
        </Constructor>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isFinal="true"/>
        <Field name="p" visibility="private" type="Producer"/>
        <Field name="gNode" visibility="private" type="Node"/>
        <Field name="from" visibility="private" type="List&lt;Node&gt;"/>
        <Field name="qEdge" visibility="private" type="Edge"/>
        <Field name="env" visibility="private" type="Environment"/>
      </Fields>
      <Methods>
        <Method name="call" visibility="public" returnType="Iterable&lt;Entity&gt;"/>
      </Methods>
    </Class>
    <Class xPosition="320.0" yPosition="420.0" package="fr.inria.edelweiss.kgdqp.core" name="RemoteProducerWSImpl" visibility="public">
      <Constructors>
        <Constructor name="RemoteProducerWSImpl" visibility="public">
          <Argument type="URL" name="url"/>
          <Argument type="WSImplem" name="implem"/>
          <Argument type="boolean" name="provEnabled"/>
        </Constructor>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isStatic="true" isFinal="true"/>
        <Field name="rp" visibility="private" type="SparqlEndpointInterface" isFinal="true"/>
        <Field name="cacheIndex" visibility="private" type="HashMap&lt;String, Boolean&gt;" isFinal="true"/>
        <Field name="provEnabled" visibility="private" type="boolean"/>
      </Fields>
      <Methods>
        <Method name="isProvEnabled" visibility="public" returnType="boolean"/>
        <Method name="setProvEnabled" visibility="public" returnType="void">
          <Argument type="boolean" name="provEnabled"/>
        </Method>
        <Method name="init" visibility="public" returnType="void">
          <Argument type="int" name="nbNodes"/>
          <Argument type="int" name="nbEdges"/>
        </Method>
        <Method name="setMode" visibility="public" returnType="/**
     * propagate to the server ? nothing
     */
void">
          <Argument type="int" name="n"/>
        </Method>
        <Method name="getGraphNodes" visibility="public" returnType="Iterable&lt;Node&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="isGraphNode" visibility="public" returnType="boolean">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="getSparqlForGetGN" visibility="private" returnType="String">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="getSparqlForIsGN" visibility="private" returnType="String">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="getSparqlPrefixes" visibility="private" returnType="String">
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="getEdges" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="getNodes" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Node" name="qNode"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="initPath" visibility="public" returnType="void">
          <Argument type="Edge" name="qEdge"/>
          <Argument type="int" name="index"/>
        </Method>
        <Method name="getNodes" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Environment" name="env"/>
          <Argument type="List&lt;Regex&gt;" name="exp"/>
          <Argument type="int" name="index"/>
        </Method>
        <Method name="getEdges" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="qEdge"/>
          <Argument type="Environment" name="env"/>
          <Argument type="Regex" name="exp"/>
          <Argument type="Node" name="src"/>
          <Argument type="Node" name="start"/>
          <Argument type="int" name="index"/>
        </Method>
        <Method name="getNode" visibility="public" returnType="Node">
          <Argument type="Object" name="value"/>
        </Method>
        <Method name="isBindable" visibility="public" returnType="boolean">
          <Argument type="Node" name="node"/>
        </Method>
        <Method name="toNodeList" visibility="public" returnType="List&lt;Node&gt;">
          <Argument type="Object" name="value"/>
        </Method>
        <Method name="map" visibility="public" returnType="Mappings">
          <Argument type="List&lt;Node&gt;" name="qNodes"/>
          <Argument type="Object" name="object"/>
        </Method>
        <Method name="getFlatRegEx" visibility="private" returnType="List&lt;String&gt;">
          <Argument type="Regex" name="exp"/>
        </Method>
        <Method name="checkNeg" visibility="private" returnType="boolean">
          <Argument type="Regex" name="exp"/>
        </Method>
        <Method name="getCacheIndex" visibility="public" returnType="HashMap&lt;String, Boolean&gt;" isSynchronized="true"/>
        <Method name="getEndpoint" visibility="public" returnType="SparqlEndpointInterface"/>
        <Method name="isProducer" visibility="public" returnType="boolean">
          <Argument type="Node" name="node"/>
        </Method>
        <Method name="getProducer" visibility="public" returnType="Producer">
          <Argument type="Node" name="node"/>
        </Method>
        <Method name="annotateResultsWithProv" visibility="private" returnType="void">
          <Argument type="Graph" name="g"/>
          <Argument type="Edge" name="qEdge"/>
        </Method>
        <Method name="getGraph" visibility="public" returnType="Object"/>
        <Method name="getMode" visibility="public" returnType="int"/>
        <Method name="setGraphNode" visibility="public" returnType="void">
          <Argument type="Node" name="n"/>
        </Method>
        <Method name="getGraphNode" visibility="public" returnType="Node"/>
      </Methods>
    </Class>
    <Class xPosition="620.0" yPosition="420.0" package="fr.inria.edelweiss.kgdqp.core" name="Util" visibility="public">
      <Constructors/>
      <Fields>
        <Field name="provPrefix" visibility="public" type="String" isStatic="true"/>
      </Fields>
      <Methods>
        <Method name="getApplicableFilter" visibility="public" returnType="List&lt;Filter&gt;" isStatic="true">
          <Argument type="Environment" name="env"/>
          <Argument type="Edge" name="edge"/>
        </Method>
        <Method name="getApplicableFilter" visibility="public" returnType="List&lt;fr.inria.acacia.corese.triple.parser.Exp&gt;" isStatic="true">
          <Argument type="List&lt;fr.inria.acacia.corese.triple.parser.Exp&gt;" name="filters"/>
          <Argument type="BasicGraphPattern" name="bgp"/>
        </Method>
        <Method name="bound" visibility="public" returnType="boolean" isStatic="true">
          <Argument type="Edge" name="edge"/>
          <Argument type="Filter" name="filter"/>
        </Method>
        <Method name="bound" visibility="public" returnType="boolean" isStatic="true">
          <Argument type="fr.inria.acacia.corese.triple.parser.Exp" name="triple"/>
          <Argument type="fr.inria.acacia.corese.triple.parser.Exp" name="filter"/>
        </Method>
        <Method name="prettyPrintCounter" visibility="public" returnType="String" isStatic="true">
          <Argument type="ConcurrentHashMap&lt;String, Long&gt;" name="map"/>
        </Method>
        <Method name="jsonDqpCost" visibility="public" returnType="String" isStatic="true">
          <Argument type="ConcurrentHashMap&lt;String, Long&gt;" name="qReqestsMap"/>
          <Argument type="ConcurrentHashMap&lt;String, Long&gt;" name="qResultsMap"/>
          <Argument type="ConcurrentHashMap&lt;String, Long&gt;" name="srcReqestsMap"/>
          <Argument type="ConcurrentHashMap&lt;String, Long&gt;" name="srcResultsMap"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="920.0" yPosition="420.0" package="fr.inria.edelweiss.kgdqp.core" name="QueryProcessDQP" visibility="public">
      <Constructors>
        <Constructor name="QueryProcessDQP" visibility="public">
          <Argument type="boolean" name="provEnabled"/>
        </Constructor>
        <Constructor name="QueryProcessDQP" visibility="public">
          <Argument type="Producer" name="p"/>
          <Argument type="Evaluator" name="e"/>
          <Argument type="Matcher" name="m"/>
          <Argument type="boolean" name="provEnabled"/>
        </Constructor>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isStatic="true"/>
        <Field name="parallelWaitMP" visibility="private" type="int" isFinal="true"/>
        <Field name="parallelLessWaitMP" visibility="private" type="int" isFinal="true"/>
        <Field name="pipelinedMP" visibility="private" type="int" isFinal="true"/>
        <Field name="provEnabled" visibility="private" type="boolean"/>
        <Field name="groupingEnabled" visibility="private" type="boolean"/>
        <Field name="queryCounter" visibility="public" type="ConcurrentHashMap&lt;String, Long&gt;" isStatic="true"/>
        <Field name="queryVolumeCounter" visibility="public" type="ConcurrentHashMap&lt;String, Long&gt;" isStatic="true"/>
        <Field name="sourceCounter" visibility="public" type="ConcurrentHashMap&lt;String, Long&gt;" isStatic="true"/>
        <Field name="sourceVolumeCounter" visibility="public" type="ConcurrentHashMap&lt;String, Long&gt;" isStatic="true"/>
      </Fields>
      <Methods>
        <Method name="setProvEnabled" visibility="public" returnType="void">
          <Argument type="boolean" name="provEnabled"/>
        </Method>
        <Method name="isProvEnabled" visibility="public" returnType="boolean"/>
        <Method name="isGroupingEnabled" visibility="public" returnType="boolean"/>
        <Method name="setGroupingEnabled" visibility="public" returnType="ServiceGrouper">
          <Argument type="boolean" name="groupingEnabled"/>
        </Method>
        <Method name="addRemote" visibility="public" returnType="void">
          <Argument type="URL" name="url"/>
          <Argument type="WSImplem" name="implem"/>
        </Method>
        <Method name="addRemoteSQL" visibility="public" returnType="void">
          <Argument type="String" name="url"/>
          <Argument type="String" name="driver"/>
          <Argument type="String" name="login"/>
          <Argument type="String" name="password"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="Graph" name="g"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="Graph" name="g"/>
          <Argument type="boolean" name="provEnabled"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="Graph" name="g"/>
          <Argument type="Provider" name="serviceProvider"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="Graph" name="g"/>
          <Argument type="Provider" name="serviceProvider"/>
          <Argument type="boolean" name="provEnabled"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="Graph" name="g"/>
          <Argument type="Graph" name="g2"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="ProducerImpl" name="prod"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="ProducerImpl" name="prod"/>
          <Argument type="boolean" name="provEnabled"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="Producer" name="prod"/>
          <Argument type="Matcher" name="match"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="Producer" name="prod"/>
          <Argument type="Matcher" name="match"/>
          <Argument type="boolean" name="provEnabled"/>
        </Method>
        <Method name="create" visibility="public" returnType="QueryProcessDQP" isStatic="true">
          <Argument type="Producer" name="prod"/>
          <Argument type="Evaluator" name="ev"/>
          <Argument type="Matcher" name="match"/>
          <Argument type="boolean" name="provEnabled"/>
        </Method>
        <Method name="add" visibility="public" returnType="void">
          <Argument type="Producer" name="prod"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="20.0" yPosition="820.0" package="fr.inria.edelweiss.kgdqp.core" name="BasicGraphPattern" visibility="public">
      <Constructors>
        <Constructor name="BasicGraphPattern" visibility="public"/>
      </Constructors>
      <Fields>
        <Field name="vars" visibility="private" type="ArrayList&lt;String&gt;"/>
        <Field name="edges" visibility="private" type="ArrayList&lt;Edge&gt;"/>
        <Field name="processed" visibility="private" type="boolean"/>
      </Fields>
      <Methods>
        <Method name="isProcessed" visibility="public" returnType="boolean"/>
        <Method name="setProcessed" visibility="public" returnType="void">
          <Argument type="boolean" name="processed"/>
        </Method>
        <Method name="getEdges" visibility="public" returnType="ArrayList&lt;Edge&gt;"/>
        <Method name="setEdges" visibility="public" returnType="void">
          <Argument type="ArrayList&lt;Edge&gt;" name="edges"/>
        </Method>
        <Method name="getVars" visibility="public" returnType="ArrayList&lt;String&gt;"/>
        <Method name="equals" visibility="public" returnType="boolean">
          <Argument type="Object" name="obj"/>
        </Method>
        <Method name="hashCode" visibility="public" returnType="int"/>
        <Method name="toString" visibility="public" returnType="String"/>
      </Methods>
    </Class>
    <Class xPosition="320.0" yPosition="820.0" package="fr.inria.edelweiss.kgdqp.core" name="CentralizedInferrencingNoSpin" visibility="public">
      <Constructors/>
      <Fields>
        <Field name="logger" visibility="package" type="Logger" isStatic="true"/>
        <Field name="pertinentRulesQueryOumy" visibility="package" type="String" isStatic="true" isFinal="true"/>
        <Field name="pertinentRulesQuery" visibility="package" type="String" isStatic="true" isFinal="true"/>
        <Field name="allRulesQuery" visibility="package" type="String" isStatic="true" isFinal="true"/>
      </Fields>
      <Methods>
        <Method name="main" visibility="public" returnType="void" isStatic="true">
          <Argument type="String" name="args"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="620.0" yPosition="820.0" package="fr.inria.edelweiss.kgdqp.core" name="FedQueryingCLI" visibility="public">
      <Constructors/>
      <Fields>
        <Field name="logger" visibility="package" type="Logger" isStatic="true"/>
      </Fields>
      <Methods>
        <Method name="main" visibility="public" returnType="void" isStatic="true">
          <Argument type="String" name="args"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="920.0" yPosition="820.0" package="fr.inria.edelweiss.kgdqp.core" name="SyncEdgeBuffer" visibility="public">
      <Constructors>
        <Constructor name="SyncEdgeBuffer" visibility="package">
          <Argument type="int" name="nbTasks"/>
          <Argument type="ExecutorService" name="exec"/>
        </Constructor>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isFinal="true"/>
        <Field name="queue" visibility="private" type="BlockingQueue&lt;Entity&gt;"/>
        <Field name="executorService" visibility="private" type="ExecutorService"/>
        <Field name="nbPendingTasks" visibility="private" type="int"/>
      </Fields>
      <Methods>
        <Method name="next" visibility="public" returnType="Entity"/>
        <Method name="hasNext" visibility="public" returnType="boolean"/>
        <Method name="put" visibility="public" returnType="void">
          <Argument type="Entity" name="ent"/>
        </Method>
        <Method name="iterator" visibility="public" returnType="Iterator&lt;Entity&gt;"/>
        <Method name="remove" visibility="public" returnType="void"/>
        <Method name="toString" visibility="public" returnType="String"/>
      </Methods>
    </Class>
    <Class xPosition="20.0" yPosition="1220.0" package="fr.inria.edelweiss.kgdqp.core" name="FedInferrencingCLI" visibility="public">
      <Constructors/>
      <Fields>
        <Field name="logger" visibility="package" type="Logger" isStatic="true"/>
        <Field name="pertinentRulesQueryOumy" visibility="package" type="String" isStatic="true" isFinal="true"/>
        <Field name="pertinentRulesQuery" visibility="package" type="String" isStatic="true" isFinal="true"/>
        <Field name="allRulesQuery" visibility="package" type="String" isStatic="true" isFinal="true"/>
      </Fields>
      <Methods>
        <Method name="main" visibility="public" returnType="void" isStatic="true">
          <Argument type="String" name="args"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="320.0" yPosition="1220.0" package="fr.inria.edelweiss.kgdqp.core" name="RuleEngineThread" visibility="public">
      <Constructors>
        <Constructor name="RuleEngineThread" visibility="public">
          <Argument type="RuleEngine" name="ruleEngine"/>
        </Constructor>
      </Constructors>
      <Fields>
        <Field name="ruleEngine" visibility="private" type="RuleEngine"/>
      </Fields>
      <Methods>
        <Method name="run" visibility="public" returnType="void"/>
      </Methods>
    </Class>
    <Class xPosition="620.0" yPosition="1220.0" package="fr.inria.edelweiss.kgdqp.core" name="ProviderImplCostMonitoring" visibility="public">
      <Constructors>
        <Constructor name="ProviderImplCostMonitoring" visibility="private"/>
      </Constructors>
      <Fields>
        <Field name="SERVICE_ERROR" visibility="private" type="String" isStatic="true" isFinal="true"/>
        <Field name="logger" visibility="private" type="Logger" isStatic="true"/>
        <Field name="LOCALHOST" visibility="package" type="String" isStatic="true" isFinal="true"/>
        <Field name="provEnabled" visibility="private" type="boolean"/>
        <Field name="table" visibility="package" type="HashMap&lt;String, QueryProcess&gt;"/>
        <Field name="version" visibility="package" type="Hashtable&lt;String, Double&gt;"/>
        <Field name="defaut" visibility="package" type="QueryProcess"/>
        <Field name="provenance" visibility="package" type="Graph"/>
        <Field name="limit" visibility="private" type="int"/>
      </Fields>
      <Methods>
        <Method name="create" visibility="public" returnType="ProviderImplCostMonitoring" isStatic="true"/>
        <Method name="isProvEnabled" visibility="public" returnType="boolean"/>
        <Method name="setProvEnabled" visibility="public" returnType="void">
          <Argument type="boolean" name="provEnabled"/>
        </Method>
        <Method name="set" visibility="public" returnType="void">
          <Argument type="String" name="uri"/>
          <Argument type="double" name="version"/>
        </Method>
        <Method name="isSparql0" visibility="public" returnType="boolean">
          <Argument type="Node" name="serv"/>
        </Method>
        <Method name="add" visibility="public" returnType="void">
          <Argument type="String" name="uri"/>
          <Argument type="Graph" name="g"/>
        </Method>
        <Method name="add" visibility="public" returnType="void">
          <Argument type="Graph" name="g"/>
        </Method>
        <Method name="service" visibility="public" returnType="Mappings">
          <Argument type="Node" name="serv"/>
          <Argument type="Exp" name="exp"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="service" visibility="public" returnType="Mappings">
          <Argument type="Node" name="serv"/>
          <Argument type="Exp" name="exp"/>
          <Argument type="Mappings" name="lmap"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="globalSend" visibility="package" returnType="Mappings">
          <Argument type="Node" name="serv"/>
          <Argument type="Query" name="q"/>
          <Argument type="Mappings" name="lmap"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="send" visibility="package" returnType="Mappings">
          <Argument type="CompileService" name="compiler"/>
          <Argument type="Node" name="serv"/>
          <Argument type="Query" name="q"/>
          <Argument type="Mappings" name="lmap"/>
          <Argument type="Environment" name="env"/>
          <Argument type="int" name="start"/>
          <Argument type="int" name="limit"/>
        </Method>
        <Method name="parse" visibility="package" returnType="Mappings">
          <Argument type="StringBuffer" name="sb"/>
        </Method>
        <Method name="parse" visibility="package" returnType="Mappings">
          <Argument type="InputStream" name="stream"/>
        </Method>
        <Method name="doPost2" visibility="public" returnType="StringBuffer">
          <Argument type="String" name="server"/>
          <Argument type="String" name="query"/>
        </Method>
        <Method name="doPost" visibility="public" returnType="InputStream">
          <Argument type="String" name="server"/>
          <Argument type="String" name="query"/>
          <Argument type="int" name="timeout"/>
        </Method>
        <Method name="post" visibility="package" returnType="URLConnection">
          <Argument type="String" name="server"/>
          <Argument type="String" name="query"/>
          <Argument type="int" name="timeout"/>
        </Method>
        <Method name="getBuffer" visibility="package" returnType="StringBuffer">
          <Argument type="InputStream" name="stream"/>
        </Method>
        <Method name="annotateResultsWithProv" visibility="private" returnType="void">
          <Argument type="Mappings" name="m"/>
          <Argument type="String" name="serviceQuery"/>
          <Argument type="String" name="endpoint"/>
        </Method>
        <Method name="getProvenance" visibility="public" returnType="Graph"/>
      </Methods>
    </Class>
    <Class xPosition="920.0" yPosition="1220.0" package="fr.inria.edelweiss.kgdqp.core" name="ParallelMetaProducer" visibility="public">
      <Constructors>
        <Constructor name="ParallelMetaProducer" visibility="protected"/>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isFinal="true"/>
      </Fields>
      <Methods>
        <Method name="create" visibility="public" returnType="ParallelMetaProducer" isStatic="true"/>
        <Method name="getEdges" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="edge"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="add" visibility="package" returnType="MetaIterator&lt;Entity&gt;">
          <Argument type="MetaIterator&lt;Entity&gt;" name="meta"/>
          <Argument type="Iterable&lt;Entity&gt;" name="it"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="20.0" yPosition="1620.0" package="fr.inria.edelweiss.kgdqp.core" name="Messages" visibility="public">
      <Constructors/>
      <Fields>
        <Field name="countQueries" visibility="public" type="String" isStatic="true"/>
        <Field name="countTransferredResults" visibility="public" type="String" isStatic="true"/>
        <Field name="countDS" visibility="public" type="String" isStatic="true"/>
        <Field name="countTransferredResultsPerSource" visibility="public" type="String" isStatic="true"/>
      </Fields>
      <Methods/>
    </Class>
    <Enum xPosition="320.0" yPosition="1620.0" package="fr.inria.edelweiss.kgdqp.core" name="WSImplem" visibility="public">
      <Literals>
        <Literal name="SOAP"/>
        <Literal name="REST"/>
      </Literals>
    </Enum>
    <Class xPosition="620.0" yPosition="1620.0" package="fr.inria.edelweiss.kgdqp.core" name="Stop" visibility="public">
      <Constructors/>
      <Fields/>
      <Methods>
        <Method name="getEdge" visibility="public" returnType="Edge"/>
        <Method name="getNode" visibility="public" returnType="Node"/>
        <Method name="getNode" visibility="public" returnType="Node">
          <Argument type="int" name="i"/>
        </Method>
        <Method name="getGraph" visibility="public" returnType="Node"/>
        <Method name="toString" visibility="public" returnType="String"/>
        <Method name="nbNode" visibility="public" returnType="int"/>
        <Method name="getProvenance" visibility="public" returnType="Object"/>
        <Method name="setProvenance" visibility="public" returnType="void">
          <Argument type="Object" name="obj"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="920.0" yPosition="1620.0" package="fr.inria.edelweiss.kgdqp.core" name="ParallelMetaProducerLessBlocking" visibility="public">
      <Constructors>
        <Constructor name="ParallelMetaProducerLessBlocking" visibility="protected"/>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isFinal="true"/>
      </Fields>
      <Methods>
        <Method name="create" visibility="public" returnType="ParallelMetaProducerLessBlocking" isStatic="true"/>
        <Method name="getEdges" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="edge"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="add" visibility="package" returnType="MetaIterator&lt;Entity&gt;">
          <Argument type="MetaIterator&lt;Entity&gt;" name="meta"/>
          <Argument type="Iterable&lt;Entity&gt;" name="it"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="20.0" yPosition="2020.0" package="fr.inria.edelweiss.kgdqp.core" name="PipelinedMetaProducer" visibility="public">
      <Constructors>
        <Constructor name="PipelinedMetaProducer" visibility="protected"/>
      </Constructors>
      <Fields>
        <Field name="logger" visibility="private" type="Logger" isFinal="true"/>
        <Field name="buffers" visibility="private" type="ArrayList&lt;SyncEdgeBuffer&gt;"/>
      </Fields>
      <Methods>
        <Method name="create" visibility="public" returnType="PipelinedMetaProducer" isStatic="true"/>
        <Method name="getEdges" visibility="public" returnType="Iterable&lt;Entity&gt;">
          <Argument type="Node" name="gNode"/>
          <Argument type="List&lt;Node&gt;" name="from"/>
          <Argument type="Edge" name="edge"/>
          <Argument type="Environment" name="env"/>
        </Method>
        <Method name="add" visibility="package" returnType="MetaIterator&lt;Entity&gt;">
          <Argument type="MetaIterator&lt;Entity&gt;" name="meta"/>
          <Argument type="Iterable&lt;Entity&gt;" name="it"/>
        </Method>
      </Methods>
    </Class>
    <Class xPosition="320.0" yPosition="2020.0" package="fr.inria.edelweiss.kgdqp.core" name="QueryExecDQP" visibility="public">
      <Constructors>
        <Constructor name="QueryExecDQP" visibility="public"/>
      </Constructors>
      <Fields/>
      <Methods>
        <Method name="create" visibility="public" returnType="QueryExecDQP" isStatic="true"/>
        <Method name="create" visibility="public" returnType="QueryExecDQP" isStatic="true">
          <Argument type="IEngine" name="eng"/>
        </Method>
        <Method name="add" visibility="public" returnType="void">
          <Argument type="IEngine" name="eng"/>
        </Method>
        <Method name="addRemote" visibility="public" returnType="void">
          <Argument type="URL" name="producerURL"/>
          <Argument type="WSImplem" name="implem"/>
        </Method>
        <Method name="addRemoteSQL" visibility="public" returnType="void">
          <Argument type="String" name="producerURL"/>
          <Argument type="String" name="driver"/>
          <Argument type="String" name="login"/>
          <Argument type="String" name="password"/>
        </Method>
      </Methods>
    </Class>
  </ClassDiagramComponents>
  <ClassDiagramRelations>
    <UseRelation source="QueryProcessDQP" target="WSImplem" sourceCardinality="1..1" targetCardinality="1..1"/>
    <UseRelation source="QueryExecDQP" target="QueryExecDQP" sourceCardinality="1..1" targetCardinality="1..1"/>
    <HasRelation name="buffer" source="CallableBufferedGetEdges" target="SyncEdgeBuffer" sourceCardinality="1..1" targetCardinality="1..1"/>
    <UseRelation source="PipelinedMetaProducer" target="PipelinedMetaProducer" sourceCardinality="1..1" targetCardinality="1..1"/>
    <UseRelation source="ParallelMetaProducer" target="ParallelMetaProducer" sourceCardinality="1..1" targetCardinality="1..1"/>
    <UseRelation source="QueryExecDQP" target="WSImplem" sourceCardinality="1..1" targetCardinality="1..1"/>
    <UseRelation source="ProviderImplCostMonitoring" target="ProviderImplCostMonitoring" sourceCardinality="1..1" targetCardinality="1..1"/>
    <UseRelation source="ParallelMetaProducerLessBlocking" target="ParallelMetaProducerLessBlocking" sourceCardinality="1..1" targetCardinality="1..1"/>
    <HasRelation name="buffers" source="PipelinedMetaProducer" target="SyncEdgeBuffer" sourceCardinality="1..1" targetCardinality="0..*" collectionType="List"/>
    <UseRelation source="Util" target="BasicGraphPattern" sourceCardinality="1..1" targetCardinality="1..1"/>
    <UseRelation source="QueryProcessDQP" target="QueryProcessDQP" sourceCardinality="1..1" targetCardinality="1..1"/>
  </ClassDiagramRelations>
</ClassDiagram>
