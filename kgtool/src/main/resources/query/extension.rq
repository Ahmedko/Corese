template {


}
where {}
export { 

function xt:turtle() {  
    st:apply-templates-with(st:turtle)
}

function xt:turtle(?x) {  
    st:apply-templates-with(st:turtle, ?x)
}

function xt:rdfxml() {  
    st:apply-templates-with(st:rdfxml)
}

function xt:json() {  
    st:apply-templates-with(st:json)
}

function xt:json(?x) {  
    st:apply-templates-with(st:json, ?x)
}

function xt:owl() {  
    st:apply-templates-with(st:owl)
}

function xt:owl(?x) {  
    st:apply-templates-with(st:owl, ?x)
}

function xt:spin() {  
    st:apply-templates-with(st:spin)
}

function xt:spin(?x) {  
    st:apply-templates-with(st:spin, ?x)
}

function st:list(?t) { 
    let (?l = st:call-template-with(st:list, st:list, ?t)){
        if (! isLiteral(?l) || datatype(?l) != dt:list){
            xt:list(?l) }
        else { ?l }
    }
}

}

