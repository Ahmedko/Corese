#
# Compute the day of a date
# http://fr.wikipedia.org/wiki/DÃ©termination_du_jour
#
# Olivier Corby - Wimmics, Inria, I3S - 2015
#
prefix cal: <http://ns.inria.fr/sparql-extension/calendar/>
select 

(cal:jour("1930-01-29"^^xsd:date) as ?fr)

(package(cal:calendar,
define (xt:day(?d)  = cal:day(?d)) ,
define (xt:jour(?d) = cal:jour(?d)),

define (cal:day(?d)  = cal:en(cal:find(?d))) ,
define (cal:jour(?d) = cal:fr(cal:find(?d))),

define (cal:div(?a, ?b) = xsd:integer(floor(?a / ?b)))  ,
define (cal:mod(?a, ?b) = xsd:integer(?a - (?b * cal:div(?a, ?b))))  ,
define (cal:bisextile(?y) =
    ((cal:mod(?y, 4) = 0) &&
      ((cal:mod(?y, 100) != 0) || (cal:mod(?y, 400) = 0))))  ,
define (cal:ab(?y) = cal:div(?y, 100))  ,
define (cal:cd(?y) = cal:mod(?y, 100))  ,
define (cal:k(?y)  = cal:div(cal:cd(?y), 4)) ,
define (cal:q(?y)  = cal:div(cal:ab(?y), 4)) ,
define (cal:month(?m, ?y) =
  if (?m <= 2,
    if (cal:bisextile(?y),
      if (?m = 1, 3, 6),
      if (?m = 1, 4, 0)),
  if (?m in (3, 11), 0,
    if (?m in (6), 1,
      if (?m in (9, 12), 2,
	if (?m in (4, 7), 3,
	  if (?m in (10), 4,
	    if (?m in (5), 5, 6))))))))  ,
define (cal:get(?y, ?m, ?d) =
  let (?n = cal:k(?y) + cal:q(?y) + cal:cd(?y) +
        cal:month(?m, ?y) + ?d + 2 + 5 * cal:ab(?y),
    cal:mod(?n, 7)))  ,
define (cal:find(?d) =
  cal:get(year(?d), month(?d), day(?d)))  ,
define (cal:en(?n) =
  if (?n = 0, "Sunday",
  if (?n = 1, "Monday",
  if (?n = 2, "Tuesday",
  if (?n = 3, "Wednesday",
  if (?n = 4, "Thursday",
  if (?n = 5, "Friday",
  if (?n = 6, "Saturday", "Unknown"))))))))  ,
define (cal:fr(?n) =
  if (?n = 0, "Dimanche",
  if (?n = 1, "Lundi",
  if (?n = 2, "Mardi",
  if (?n = 3, "Mercredi",
  if (?n = 4, "Jeudi",
  if (?n = 5, "Vendredi",
  if (?n = 6, "Samedi", "Inconnu"))))))))  
)
as ?def)
  

where  {}