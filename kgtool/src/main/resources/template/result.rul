<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Tue Dec 09 08:50:13 CET 2014
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' 
  xmlns='http://ns.inria.fr/edelweiss/2011/rule#'>
<rule>
<body>
<![CDATA[
template st:close {
  
  "</table>"
   
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:query(?q) {
  """
  <h3>Query</h3>
  <form method='post' action='"""
    
  st:get(st:service)
  
  """'>
  
   <select name="profile">
    <option value="st:ldp">LDP</option>
    <option value="st:result">STD</option>
   </select> 
  
    <br/>
    <textarea cols='60' rows='10' name='query'>"""str(?q)
    
  """</textarea>
    <br/>
    <input type='submit' value='Submit'/>
  </form>
  """
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:start {

  st:call-template(st:head)
  
  st:call-template(?page)
    
  st:call-template(st:tail)

}
where {

  bind (st:get(st:uri) as ?uri)
  
  # uri starting with st: is a named template to execute
  bind (if (bound(?uri) && strstarts(?uri, st:),
	  ?uri, st:page)
      as ?page)
  
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:queries {
"<ol>"

  "<li>" st:call-template(st:href, st:type, "type") "</li>"
  
  "<li>" st:call-template(st:href, st:count, "count") "</li>"
    
  "<li>" st:call-template(st:href, st:dbpedia, "dbpedia") "</li>"

  "</ol>"
    
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:dbpedia {

   st:call-template(st:query, 
   """select * where { 
     service <http://fr.dbpedia.org/sparql> {
      select * where {
	<http://fr.dbpedia.org/resource/Paris> ?p ?y 
      }
      limit 20 offset 20
      }
   }"""
   )
   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:index {

  st:call-template(st:href, st:queries, "Queries")
     
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template st:th {
 
    "<th>" str(?v) "</th>" ; separator = " "
 
}
where {
  ?x rs:resultVariable ?v
}
order by ?v
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:tail {
  
  """  
  <p>
  Generated by <a href='http://ns.inria.fr/sparql-template'>SPARQL Template Transformation</a> using <a href='http://wimmics.inria.fr'>Corese</a>
  """
  
  now()
  
  """
  </p>
  
  </body>
  </html>
  """

}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template st:decl {

  """
  <h3>Result</h3>
  <table>
  """
  
 "<tr class='s1'><td/>"
 
  st:call-template(st:th)
  
 "</tr>\n"
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:banner  {
"""
<table style="width:100%">
<tr>
<td><a href='http://www.inria.fr/centre/sophia'><img alt ='INRIA' src='http://www.inria.fr/var/inria/storage/images/medias/inria/images-corps/logo-inria-scientifique-couleur/404505-4-fre-FR/logo-inria-scientifique-couleur.jpg'/></a></td>

<td><a href='http://wimmics.inria.fr'><img alt='Wimmics' src ='/img/wimmics.png' height='100'/></a></td>

<td><a href='http://www.i3s.unice.fr'><img alt='I3S' src ='http://www.i3s.unice.fr/I3S/LOGOS/NewlogoI3S-250x70.png' /></a></td>
</tr>
</table>
"""
}
where {}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:page {
  
  st:call-template(st:query, st:get(st:query))
 
  st:call-template(st:open)
  
  st:call-template(st:table)
  
  st:call-template(st:close)
    
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:link(?uri, ?title) {
   "<a href=\""  str(?uri) "\">" str(?title) "</a>"
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:count {

   st:call-template(st:query, 
   """select (count(*) as ?c) where { ?x ?p ?y }"""
   )
   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Generate a hyperlink to a dynamic web page ?l
# In response to click on the link, st:start template will check the uri and
# in this case redirect to uri named template
#
template st:href(?l, ?t) {

   "<a href='" st:get(st:service) 
   "?uri=" ?l 
   "&profile=" st:get(st:profile)    
    "'>" str(?t) "</a>"   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template st:table {

 "<tr class='s" 
   if (kg:even(st:number()), 1, 0)
 "'>"
 
  "<th>"  st:number() "</th>"
  
    st:apply-templates(?s)
 
 "</tr>"
 
}
where {
  ?x rs:solution ?s 
  ?s rs:index ?i
  
}
order by ?i
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:esc(?x) {

  str(?d)
    
}
where {

   bind(st:turtle(?x) as ?t)
   
   bind(
    if (isURI(?x) && strstarts(?t, "<"), str(?x), ?t) 
    as ?d) 
    
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:type {

   st:call-template(st:query, 
   """select * where { ?x a ?t }"""
   )
   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:display(?x) {

  if (! bound(?profile), 
    st:call-template(st:esc, ?x),
    if (?profile = st:ldp, 
      st:call-template(st:linkprofile, ?x),
      st:call-template(st:linkesc, ?x)))
          
}
where {
      bind (st:get(st:profile) as ?profile)
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template st:open {

  """
  <h3>Result</h3>
  <table>
  """
  
 "<tr class='s1'><td/>"
 
  st:call-template(st:th)
  
 "</tr>\n"
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:head {
  """
  <html>
  <head>
    <title>Corese Semantic Web Server</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link href="/style.css" rel="stylesheet" type="text/css" />

    <style type='text/css'>
	.s0 { background:lightgrey }
	.s1 { background:lightblue }
    </style>
    
  </head>
  <body>
  """
  st:call-template(st:banner)
  
  
  
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:linkesc(?x) {

  if (isURI(?x), 
    st:call-template(st:link, ?x, ?e),
    str(?e))
    
}
where {

  bind (st:call-template(st:esc, ?x) as ?e)
    
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:linkprofile(?x) {

  if (isURI(?x), 
    st:call-template(st:link, st:call-template(st:transform, ?x), ?e),
    str(?e))
    
}
where {

  bind (st:call-template(st:esc, ?x) as ?e)

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:transform(?x) {

    st:get(st:service) "?uri=" encode_for_uri(?x) "&profile=" st:get(st:profile)
    
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template  {
 
    "<td>"  
    coalesce(st:call-template(st:display, ?val), "&nbsp;")
    "</td>" ; separator = " "
  
}
where {
  ?x rs:solution ?in
  ?x rs:resultVariable ?var 
  
  optional {
    ?in rs:binding [ rs:variable ?var ; rs:value ?val ]
  }
  
}
order by ?var
]]>
</body>
</rule>

</rdf:RDF>
