<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Tue Dec 09 08:50:13 CET 2014
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' 
  xmlns='http://ns.inria.fr/edelweiss/2011/rule#'>
<rule>
<body>
<![CDATA[
template st:minus {

"""
<h3>Minus</h3>
<p>
Cette requête retourne les ressources ?x instance du type Person ou Place.
</p>
"""
   st:call-template(st:query-name, st:minus,
   coalesce(st:get(st:query), 
   """
prefix o:  <http://dbpedia.org/ontology/>
prefix cn: <http://cdn.fr/schema/>
select * where { 
  ?x a foaf:Person  
  minus { ?x cn:begin ?d }
}""")
   )
   
     st:call-template(st:result)

   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:start {

  st:call-template(st:head)
  
  st:call-template(st:selectquery, ?page)

  st:call-template(?page)
    
  st:call-template(st:tail)

}
where {

  bind (st:get(st:uri) as ?uri)
  
  # uri starting with st: is a named template to execute
  bind (if (bound(?uri) && strstarts(?uri, st:),
	  ?uri, st:page)
      as ?page)
  
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:index {

  st:call-template(st:href, st:queries, "Queries")
     
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:selectquery(?t) {

"""
<h3>Select a query</h3>

<form method='get' action='"""
    
  st:get(st:service)
  
  """'>
  <input type='hidden' name='transform' value='""" st:get(st:transform) """' />

  <select name='uri'>
  """
  
    group { 
      "<option value='" ?page "'" 
      if (?page = ?t, "selected='true'", "")
      ">" 
      str(?title) 
      "</option>" 
    }
    
 """  
 </select>
  <input type='submit' value='Submit'  />
 </form>
 """
}
where {
}
values (?page ?title) {
  (st:type 	"Type")
  (st:count 	"Count")
  (st:count-group "Count Group")
  (st:dbpedia 	"Service")
  (st:union 	"Union")
  (st:optional 	"Optional")
  (st:minus 	"Minus")
  (st:graph 	"Graph") 
  (st:path 	"Path") 
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:dbpedia {

"""
<h3>Service</h3>
<p>
Cette requête interroge le serveur <a href='http://fr.dbpedia.org/sparql'>DBpedia</a> sur la resource <a href='http://fr.dbpedia.org/resource/Paris'>Paris</a>.
</p>
"""

   st:call-template(st:query-name, st:dbpedia, 
   coalesce(st:get(st:query), 
   """select * where { 
     service <http://fr.dbpedia.org/sparql> {
      select * where {
	<http://fr.dbpedia.org/resource/Paris> ?p ?y 
      }
      limit 20 offset 20
      }
   }""")
   )
   
      st:call-template(st:result)
     
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template st:th {
 
    "<th>" str(?v) "</th>" ; separator = " "
 
}
where {
  ?x rs:resultVariable ?v
}
order by ?v
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:link(?uri, ?title) {
   "<a href=\""  str(?uri) "\">" str(?title) "</a>"
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:query-name(?t, ?q) {
  """
  <form method='post' action='"""
    
  st:get(st:service)
  
  """'>
       
   <input type='submit' value='Submit'/>
   
   <input type='hidden' name='transform' value='/home/corby/AData/template/web'/>
   
   <input type='hidden' name='uri' value='""" ?t """'/>
   
   <br/>
    <textarea cols='60' rows='10' name='query'>"""str(?q)
    
  """</textarea>
  </form>
  """
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:count {

"""
<h3>Count</h3>
<p>
Cette requête compte le nombre de triplets avec un opérateur d'<a href='http://www.w3.org/TR/sparql11-query/#aggregates'>aggrégation</a>. 
</p>
"""

st:call-template(st:query-name, st:count,
   coalesce(st:get(st:query), """select (count(*) as ?c) where { ?x ?p ?y }""")
   )
   

   st:call-template(st:result)
  
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>

template st:result {
   
  st:call-template(st:open)
  
  st:call-template(st:table)
  
  st:call-template(st:close)
    
}
where {
  ?r rs:solution ?s
}
limit 1
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:optional {

"""
<h3>Optional</h3>
<p>
Cette requête retourne les ressources ?x instance du type Person qui ont un label de manière optionnelle.
</p>
"""
   st:call-template(st:query-name, st:optional,
   coalesce(st:get(st:query), 
   """
prefix o:  <http://dbpedia.org/ontology/>
select * where { 
   ?x a foaf:Person 
   optional  { ?x rdfs:label ?l }
}""")
   )
   
     st:call-template(st:result)

   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template st:table {

 "<tr class='s" 
   if (kg:even(st:number()), 1, 0)
 "'>"
 
  "<th>"  st:number() "</th>"
  
    st:apply-templates(?s)
 
 "</tr>"
 
}
where {
  ?x rs:solution ?s 
  ?s rs:index ?i
  
}
order by ?i
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:type {

"""
<h3>Type</h3>
<p>
Cette requête retourne les ressources ?x instance d'un type ?t.
</p>
"""
   st:call-template(st:query-name, st:type,
   coalesce(st:get(st:query), """select * where { ?x a ?t }""")
   )
   
   st:call-template(st:result)
   
     
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:display(?x) {

    st:call-template(st:linkprofile, ?x)
        
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:count-group {

"""
<h3>Count Group</h3>
<p>
Cette requête compte le nombre de triplets avec un opérateur d'<a href='http://www.w3.org/TR/sparql11-query/#aggregates'>aggrégation</a>. 
Elle retourne un  résultat pour chaque valeur de ?x. 
</p>
"""

st:call-template(st:query-name, st:count-group,
   coalesce(st:get(st:query), """
select ?x (count(*) as ?c) where { 
   ?x ?p ?y 
} 
group by ?x """)
   )
   
      st:call-template(st:result)

   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:linkprofile(?x) {

  if (isURI(?x), 
    st:call-template(st:link, st:call-template(st:transform, ?x), ?e),
    str(?e))
    
}
where {

  bind (st:call-template(st:esc, ?x) as ?e)

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:transform(?x) {

    st:get(st:service) 
    "?uri=" encode_for_uri(?x) 
    "&profile=st:ldp"
   
    
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:close {
  
  "</table>"
   
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:query(?q) {
  """
  <h3>Query</h3>
  <form method='post' action='"""
    
  st:get(st:service)
  
  """'>
  
   <select name="transform">
    <option value="/home/corby/AData/template/web">web</option>
    <option value="st:web">web</option>
   </select>
   <br/>
    <textarea cols='60' rows='10' name='query'>"""str(?q)
    
  """</textarea>
    <br/>
    <input type='submit' value='Submit'/>
  </form>
  """
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:graph {

"""
<h3>Named Graph</h3>
<p>
Cette requête retourne les ressources ?x instance du type Person et les graphes nommés.
</p>
"""
   st:call-template(st:query-name, st:graph,
   coalesce(st:get(st:query), 
   """
prefix o:  <http://dbpedia.org/ontology/>
select * where { 
   graph ?g { ?x a foaf:Person }
}""")
   )
   
     st:call-template(st:result)

   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:tail {
  
  """  
  <p>
  Generated by <a href='http://ns.inria.fr/sparql-template'>SPARQL Template Transformation</a> using <a href='http://wimmics.inria.fr'>Corese</a>
  """
  
  now()
  
  """
  </p>
  
  </body>
  </html>
  """

}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:banner  {
"""
<table style="width:100%">
<tr>
<td><a href='http://www.inria.fr/centre/sophia'><img alt ='INRIA' src='http://www.inria.fr/var/inria/storage/images/medias/inria/images-corps/logo-inria-scientifique-couleur/404505-4-fre-FR/logo-inria-scientifique-couleur.jpg'/></a></td>

<td><a href='http://wimmics.inria.fr'><img alt='Wimmics' src ='/img/wimmics.png' height='100'/></a></td>

<td><a href='http://www.i3s.unice.fr'><img alt='I3S' src ='http://www.i3s.unice.fr/I3S/LOGOS/NewlogoI3S-250x70.png' /></a></td>
</tr>
</table>
"""
}
where {}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template st:decl {

  """
  <h3>Result</h3>
  <table>
  """
  
 "<tr class='s1'><td/>"
 
  st:call-template(st:th)
  
 "</tr>\n"
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:page {
  
  st:call-template(st:query, st:get(st:query))
 
  st:call-template(st:result)
  
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:path {

"""
<h3>Property Path</h3>
<p>
Cette requête retourne les ressources reliées par un chemin.
</p>
"""
   st:call-template(st:query-name, st:path,
   coalesce(st:get(st:query), 
   """
prefix p:  <http://fr.dbpedia.org/property/>
select * where { 
    <http://fr.dbpedia.org/resource/Emmanuel-Philibert_de_Savoie_(1528-1580)> p:successeur+ ?y
}
#values ?x { <http://fr.dbpedia.org/resource/Emmanuel-Philibert_de_Savoie_(1528-1580)> }
""")
   )
   
     st:call-template(st:result)

   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Generate a hyperlink to a dynamic web page ?l
# In response to click on the link, st:start template will check the uri and
# in this case redirect to uri named template
#
template st:href(?l, ?t) {

   "<a href='" st:get(st:service) 
   "?uri=" ?l 
   coalesce(
    concat("&profile=",   st:get(st:profile)),
    concat("&transform=", st:get(st:transform)))
   
    "'>" str(?t) "</a>"   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:esc(?x) {

  str(?d)
    
}
where {

   bind(st:turtle(?x) as ?t)
   
   bind(
    if (isURI(?x) && strstarts(?t, "<"), str(?x), ?t) 
    as ?d) 
    
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template st:open {

  """
  <h3>Result</h3>
  <table>
  """
  
 "<tr class='s1'><td/>"
 
  st:call-template(st:th)
  
 "</tr>\n"
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:head {
  """
  <html>
  <head>
    <title>Corese Semantic Web Server</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link href="/style.css" rel="stylesheet" type="text/css" />

    <style type='text/css'>
	.s0 { background:lightgrey }
	.s1 { background:lightblue }
    </style>
    
  </head>
  <body>
  """
  st:call-template(st:banner)
  
  "<h2>SPARQL Tutorial</h2>"
  
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:union {

"""
<h3>Union</h3>
<p>
Cette requête retourne les ressources ?x instance du type Person ou Place.
</p>
"""
   st:call-template(st:query-name, st:union,
   coalesce(st:get(st:query), 
   """
prefix o:  <http://dbpedia.org/ontology/>
select * where { 
  { ?x a foaf:Person } union { ?x a o:Place }
}""")
   )
   
     st:call-template(st:result)

   
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:linkesc(?x) {

  if (isURI(?x), 
    st:call-template(st:link, ?x, ?e),
    str(?e))
    
}
where {

  bind (st:call-template(st:esc, ?x) as ?e)
    
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix rs: <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
template  {
 
    "<td>"  
    coalesce(st:call-template(st:display, ?val), "&nbsp;")
    "</td>" ; separator = " "
  
}
where {
  ?x rs:solution ?in
  ?x rs:resultVariable ?var 
  
  optional {
    ?in rs:binding [ rs:variable ?var ; rs:value ?val ]
  }
  
}
order by ?var
]]>
</body>
</rule>

</rdf:RDF>
