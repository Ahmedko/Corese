<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Wed Feb 18 10:38:21 CET 2015
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' 
  xmlns='http://ns.inria.fr/edelweiss/2011/rule#'>
<rule>
<body>
<![CDATA[
#
# SPARQL Tutorial
# st:get(st:uri) is the name of a query to execute (st:minus)
# It is used 1) to select a query and 2) to display the result of the query
# RDF graph is either RDF dataset or Query Result
# Query definitions are stored in st:context named graph 
#
template st:start {

  st:call-template(st:head)
  
  st:call-template(st:select, ?uri)
  
  st:call-template(st:display, ?uri)
   
  st:call-template(st:tail)

}
where {

  bind (coalesce(st:get(st:uri), st:intro) as ?uri)
  
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:content2(?t, ?p) {

  str(?t) "<br/>"    group distinct { "<a href='" str(?d) "'>" str(?d) "</a>" ; separator="<br/>"} "<br/>"
 
}
where {
  bind (st:get(st:context) as ?g)
  graph ?g {
    ?ds a st:Dataset
    ?ds ?p [ st:uri ?d ]
  }
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:content {
  
  st:call-template(st:content2, "Data:",   st:data)
  st:call-template(st:content2, "Schema:", st:schema)
  st:call-template(st:content2, "Query:",  st:context)
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:tail {
  
  """ 
  <h3>Dataset</h3>
  """
  
  st:call-template(st:content) 
  
  """ 
  <p> <hr/> </p>
  """
  
  """
  <table style="width:100%">
  <tr>
  <td>
<a href='http://www.w3.org/2013/data/'><img src='http://www.w3.org/Icons/SW/sw-horz.png' /></a>
</td>
<td> 
<a href='http://www.w3.org/TR/sparql11-query/'><img width='200' src='http://www.w3.org/Icons/SW/Buttons/sw-sparql-blue-v.svg' /></a>
</td>
<td>
<a href="http://www.w3.org/RDF/" title="RDF Resource Description
Framework"> <img border="0" src="http://www.w3.org/RDF/icons/rdf_w3c_icon.64"
alt="RDF Resource Description Framework Icon"/></a>
</td>
</tr>
</table>

  <p> <hr/> </p>
  <p>
  Generated by <a href='http://ns.inria.fr/sparql-template'>SPARQL Template Transformation Language</a> using <a href='http://wimmics.inria.fr'>Corese</a>
  """
  
  now()
  
  """
  </p>
  
  </body>
  </html>
  """

}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:next(?t) {

  "<a  href='?profile=" st:get(st:profile) "&uri=" str(?n) "'>"
  "<button type='button'>Next</button>"
  "</a>"  
    
}
where {
  bind (st:get(st:context) as ?g)
  
  graph ?g {
    ?q1 st:name ?t ; st:index ?i
    bind (?i + 1 as ?j)
    ?q2 st:index ?j ;
	st:name ?n 
  }
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:banner  {
"""
<table style="width:100%">
<tr>
<td><a href='http://www.inria.fr/centre/sophia'><img alt ='INRIA' src='http://www.inria.fr/var/inria/storage/images/medias/inria/images-corps/logo-inria-scientifique-couleur/404505-4-fre-FR/logo-inria-scientifique-couleur.jpg'/></a></td>

<td><a href='http://wimmics.inria.fr'><img alt='Wimmics' src ='/img/wimmics.png' height='100'/></a></td>

<td><a href='http://www.i3s.unice.fr'><img alt='I3S' src ='http://www.i3s.unice.fr/I3S/LOGOS/NewlogoI3S-250x70.png' /></a></td>
</tr>
</table>
<hr/>
"""
}
where {}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Display result of query
# RDF graph is a result graph
#

template st:result {

   st:call-template-with(st:sparql, st:result, st:get(st:service), st:sparql)
    
}
where {
  bind (st:get(st:query) as ?query)
  filter bound(?query)
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:prev(?t) {

  "<a  href='?profile=" st:get(st:profile) "&uri=" str(?n) "'>"
  "<button type='button'>Previous</button>"
  "</a>"  
    
}
where {
  bind (st:get(st:context) as ?g)
  
  graph ?g {
    ?q1 st:name ?t ; st:index ?i
    bind (?i - 1 as ?j)
    ?q2 st:index ?j ;
	st:name ?n 
  }
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Generate a form with a SPARQL query ?q to submit
# Argument  ?n is the name of query (st:minus)
# ?q actual query, ?t query template, ?s query solution
#
template st:form(?n, ?q, ?t, ?s) {
  """
   <script type="text/javascript">           
        function show(name){
            document.getElementById('query').value = document.getElementById(name).value;
        }
   </script>
       
   <form method='post'  action='' >   
   <input type='hidden' id='tmp' value='"""str(?t)"""' />
   <input type='hidden' id='sol' value='"""str(?s)"""' />
   <input type='hidden' name='uri' value='""" ?n """'/>
   <input type='hidden' name='profile' value='""" st:get(st:profile) """'/> 
   """
   
   if (?s = st:null, "", 
   """<input type='button' onclick="show('sol')" value='Solution' />
      <input type='button' onclick="show('tmp')" value='Template' /> 
   """)
   
   """
   <input type='submit' value='Submit' />
   <br/>
   <textarea cols='60' rows='10' id='query' name='query'>"""str(?q)"""</textarea>
   </form>
  """
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Select a query name to display and execute
# query name bound to uri param
# Generate query names list from context graph
#
template st:select(?t) {

"""
<h3>Select a query</h3>

"""   
"""<form method='get' action=''>

  <input type='hidden' name='profile' value='""" st:get(st:profile) """' />
"""

  st:call-template(st:prev, ?t)

  "<select name='uri' onChange='submit()'>"
  
    st:call-template(st:list, ?t)  
    
  "</select>" 

  st:call-template(st:next, ?t)
 
""" 
</form>
"""

}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# ?n is the st:name of a query
# get definition of query in context graph
# display query and eventually result of query
# st:get(st:query) is user query
# ?q is tutorial query
#
template st:display(?n) {

"<h3>" str(?l) "</h3>"
"<p>"  
  str(?c) 
  if (bound(?r), 
    concat("<br/><a href='", str(?r), "'>(", str(?r), ")</a>"), "")
"</p>"

   st:call-template(st:form, ?n,
     coalesce(st:get(st:query), str(?q)), str(?q), coalesce(?s, st:null))
   
   st:call-template(st:result)
      
}
where {
  # named graph that contains definition of queries
  bind (st:get(st:context) as ?g)
  graph ?g {
    ?qt st:name    ?n ;
      rdfs:label   ?l ;
      rdfs:comment ?c ;
      st:query     ?q
      optional { ?qt st:reference ?r }
      optional { ?qt st:solution  ?s }
      filter(lang(?c) = (coalesce(st:get(st:lang), "fr")))
  }
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Generate query names list from context graph
#
template st:list(?t) {

  "<option value='" ?q "'" 
    if (?q = ?t, "selected='true'", "")
  ">" 
  str(?i) ". " str(?title) 
  "</option>" 
   
}
where {
  bind (st:get(st:context) as ?g)
  graph ?g {
    [] a st:Query ;
      st:index ?i ;
      st:name ?q ;
      rdfs:label ?title
  }
}
order by ?i
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:head {
  """
  <html>
  <head>
    <title>Corese Semantic Web Server</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link href="/style.css" rel="stylesheet" type="text/css" />

    <style type='text/css'>
	.s0 { background:lightgrey }
	.s1 { background:lightblue }
	.center {text-align:center}
    </style>
    
  </head>
  <body>
  """
  st:call-template(st:banner)
  
  "<h2 class='center'>SPARQL Tutorial</h2>"
  
}
where {

}
]]>
</body>
</rule>

</rdf:RDF>
