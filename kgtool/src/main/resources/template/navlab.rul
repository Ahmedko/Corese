<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Tue May 26 09:53:26 CEST 2015
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' 
  xmlns='http://ns.inria.fr/edelweiss/2011/rule#'>
<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:  <http://fr.dbpedia.org/property/>

template st:substart(?x) {

  st:call-template(st:head, st:head)

  st:apply-templates(?x)
   
  st:call-template(st:tail, st:tail)
  
}
where { 
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix p:    <http://fr.dbpedia.org/property/>
prefix o:    <http://dbpedia.org/ontology/>

template st:descperson(?r) {

  "<tr class='s" if (kg:even(st:number()), 0, 1) "'>"
  "<th class='left'>" str(?title) "</th><td>" 
  
  if (?href, 
    st:call-template(st:href, ?r, ?p),
    st:call-template(st:property, ?r, ?p))  
  
  "</td></tr>"  
}
where { 

  values (?p ?title) {
#    (p:fonction 	"Fonction")
#    (o:title 		"Titre")
    (o:predecessor 	"Prédécesseur")
    (o:successor 	"Successeur")
    (o:father 		"Père")
    (o:mother 		"Mère")
    (o:spouse 		"Conjoints")
    (o:child 		"Enfants")
    (o:residence 	"Résidence")
    (rdfs:comment 	"Résumé")
    (o:wikiPageRedirects "Voir aussi")
    (o:wikipedia	"Wikipedia")
    (o:dbpedia		"DBpedia")
  }
  
  bind (if (?p in (o:wikipedia, o:dbpedia), true, false) as ?href)

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# SPARQL Template Transformation 
# Generate a HTML hypertext navigator on top of Linked Open Data
# such as dbpedia
#
# Olivier Corby - Wimmics INRIA I3S - 2014
#
template st:start {

  st:call-template(st:page)
  
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:tail {
  
  """
  
  <p>&nbsp;</p>
 
 
  <p>
  Generated by <a href='http://ns.inria.fr/sparql-template'>SPARQL Template Transformation</a> using <a href='http://wimmics.inria.fr/corese'>Corese</a>
  <br/>
  """
  
  now()
  
  """
  </p>
  
  <p style='text-align:center'>
  <a href='http://wimmics.inria.fr'><img  src='/img/wimmics.png' /></a>
  </p>
  
  </body>
  </html>
  """

}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix p:    <http://fr.dbpedia.org/property/>
prefix o:    <http://dbpedia.org/ontology/>

template st:descresource(?r) {

  "<tr class='s" if (kg:even(st:number()), 0, 1) "'>"
  "<th class='left'>" str(?p) "</th><td>" 
  
   st:call-template(st:triple, ?r, ?p, ?v)  
  
  "</td></tr>"  
}
where { 
    ?r ?p ?v
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:property(?r, ?p) {

  if (isLiteral(?n), str(?n),
    st:call-template(st:display, ?n, coalesce(?ln, ?n)))
  
}
where { 

  ?r ?p ?n  
  optional { ?n rdfs:label ?ln }

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:  <http://fr.dbpedia.org/property/>

template st:page {

  st:call-template(st:head, st:head)

  st:call-template(st:selecttry)
   
  st:call-template(st:tail, st:tail)
  
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Hypertext link trigger Corese server 
# Answer using SPARQL Template Transformation
# st:get(st:profile) URI of the transformation, stored by Transformer
#

template st:link(?x) {

      st:get(st:service) 
      "?uri=" encode_for_uri(?x)          
      st:call-template(st:transform)
      
}
where {
 
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Geolocate resource on a map given lat et long
#

template st:closelocate {
  """}

  google.maps.event.addDomListener(window, 'load', initialize);

  </script>
      
  <p id="map-canvas"></p>
  """
}
where {
  
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:    <http://fr.dbpedia.org/property/>


template  st:href(?r, ?p) {

 "<a href=\"" 
    str(?v) 
  "\">"  
    str(?v) 
  "</a>"

}

where {
   ?r ?p ?v 
}
 
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:triple(?r, ?p, ?n) {

  if (isLiteral(?n), str(?n),
    st:call-template(st:display, ?n, coalesce(?ln, ?n)))
  
}
where { 

  ?r ?p ?n
  optional { ?n rdfs:label ?ln }
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Geolocate resource on a map given lat et long
#

template st:locate(?r, ?lat, ?lon) {
  """
  <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
  <script>
  function initialize() {
    var pos = new google.maps.LatLng("""      
      str(?lat) "," str(?lon)     
      """);
      
    var mapOptions = {zoom: 7, center: pos, mapTypeId: google.maps.MapTypeId.TERRAIN};
            
    var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
    
    google.maps.event.addListener(map, 'click', function( event ){
      alert( "Latitude: "+event.latLng.lat()+" "+", longitude: "+event.latLng.lng() ); 
    });"""
    
    st:call-template(st:locateall, ?r)

    "var marker = new google.maps.Marker({ position: pos, map: map, icon: '/img/bmarker.png' });"
     
  st:call-template(st:closelocate)
}
where {
  
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix p:    <http://fr.dbpedia.org/property/>
prefix o:    <http://dbpedia.org/ontology/>
prefix r:    <http://fr.dbpedia.org/resource/>

template st:descplace(?r) {

  "<tr class='s" if (kg:even(st:number()), 0, 1) "'>"
  "<th class='left'>" str(?title) "</th><td>" 
  
  if (?href, 
    st:call-template(st:href, ?r, ?p),
    st:call-template(st:property, ?r, ?p))  
  
  "</td></tr>"  
}
where { 

  values (?p ?title) {
    (rdfs:comment 	"Résumé")
    (p:nord		"Nord")
    (p:nordEst		"Nord Est")
    (p:est		"Est")
    (p:sudEst		"Sud Est")
    (p:sud		"Sud")
    (p:sudOuest		"Sud Ouest")
    (p:ouest		"Ouest")
    (p:nordOuest	"Nord Ouest")
    (p:latitude		"Latitude")
    (p:longitude	"Longitude")
    
    (o:wikipedia	"Wikipedia")
    (o:dbpedia		"DBpedia")
  }
  
  bind   (if (?p in (o:wikipedia, o:dbpedia), true, false) as ?href)
  filter (if (?p in (o:wikipedia, o:dbpedia), strstarts(?r, r:), true))

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:  <http://fr.dbpedia.org/property/>

template st:select {

  st:apply-templates(?x)
  
}
where {
  { ?x a foaf:Person } 
  union { ?x a o:Place }
  union { ?x a o:Resource }
  
 filter(?x = coalesce(st:get(st:uri), ?x))
}
limit 1
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:    <http://fr.dbpedia.org/property/>


template  st:display(?r, ?l) {

 "<a href=\"" 
    st:call-template(st:link, ?r) 
  "\">"  
    str(coalesce(?l, ?pr)) 
  "</a>"

}

where {
   bind (
   if (strstarts(?r, r:), concat(w:, (substr(?r, strlen(r:) + 1))), ?r) 
   as ?pr)   
}
 
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:  <http://fr.dbpedia.org/property/>

template st:default {
"<a href=\"" 
    str(?uri) 
  "\">"  
    str(?uri) 
  "</a>"
}
where {
    bind(st:get(st:uri) as ?uri)
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:head {
  """
<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"-->
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>
    <title>SPARQL Template Transformation Corese Server</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <style type='text/css'>
    body {
    font-family: Arial, sans-serif;
    }
  .s0 { background:lightgrey }
  .s1 { background:lightblue }
  .center { 
    margin-left: auto;
    margin-right: auto; 
  }
  .left { text-align: left }
  .bold { font-weight: bold }
  
  #map-canvas {
        height: 100%;
#        width:  50%;
	margin: 30px;
        padding: 30px       }
  </style>
 
  </head>
  <body>
  """
 
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:  <http://fr.dbpedia.org/property/>

template st:selecttry {

  if (bound(?t), 
    st:call-template(st:select),
    st:call-template(st:default))
  
}
where {
  optional { ?x a ?t }
}
limit 1
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[

template st:transform {
     
      coalesce(
	concat("&profile=",   st:get(st:profile)), 
	concat("&transform=", st:get(st:transform)), 
	"")   
      
}
where {
 
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:    <http://fr.dbpedia.org/property/>

template st:title(?r, ?l, ?i) {
 
  "<div style='text-align:center'>" 
  "<a href=\"" coalesce(str(?i), "")  "\">"    
  "<img width='100' alt=\"" str(?l) "\" src=\"" coalesce(str(?i), "") "\" />"
  "</a>"
  "<p>"
  "<h3>"  str(?l) "</h3>"
  "</p>"
  "</div>"

}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Geolocate  resources on a map (except resource given lat et long)
#
prefix p:    <http://fr.dbpedia.org/property/>

template st:locateall(?r) {

  "var pos" st:number()  " = new google.maps.LatLng("      
      str(?lat) "," str(?lon) ");"
                  
  "var marker" st:number() "= new google.maps.Marker({ position: pos" st:number() ", map: map, icon: '/img/smarker.png' });"
  
  "google.maps.event.addListener(marker" st:number() 
  ", 'click', function () {window.location.href = \"" 
  st:call-template(st:link, ?in) 
  "\";});"
  
}
where {

  bind (st:get(st:dataset) as ?g)
  graph ?g {
    ?in p:longitude ?lon ; p:latitude ?lat
    filter(?in != ?r)
    }
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:    <http://fr.dbpedia.org/property/>

template {

  st:call-template(st:title, ?r, ?label, (coalesce(?ic, "")))
  
  """
  <p style='text-align:center'>"""
    coalesce(str(?b), "")
    if (bound(?b) && bound(?d), " -- " , "")
    coalesce(str(?d), "")
  """</p>
  """
  
  
  """<table>
  """  
  
  st:call-template(st:descperson, ?r)
  
  """</table>
  """
}
where {

  ?in a foaf:Person
  minus { ?in a o:Resource }
  
  bind (?in as ?r)
  
  ?r rdfs:label ?label 
        
  optional { ?r p:naissance ?b . ?r p:décès ?d }

  optional { ?r o:thumbnail  ?ic  }
  
  bind (concat(w:, (substr(?r, strlen(r:) + 1))) as ?pr)   

  
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:    <http://fr.dbpedia.org/property/>

template {

  st:call-template(st:title, ?r, ?label, (coalesce(?ic, "")))
    
  """<table>
  """  
  
  st:call-template(st:descresource, ?r)
  
  """</table>
  """
}
where {

  ?in a o:Resource
  
  bind (?in as ?r)
  
  ?r rdfs:label ?label filter(lang(?label) = 'fr')
        
  optional { ?r o:thumbnail  ?ic  }
    
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix o:    <http://dbpedia.org/ontology/>
prefix w:    <http://fr.wikipedia.org/wiki/>
prefix r:    <http://fr.dbpedia.org/resource/>
prefix p:    <http://fr.dbpedia.org/property/>

template {

  st:call-template(st:title, ?r, ?label, (coalesce(?ic, "")))
  
  
  """<table>
  """  
  
  st:call-template(st:descplace, ?r)
    
  """</table>
  """
  
  st:call-template(st:locate, ?in, ?lat, ?lon)

}
where {

  ?in a o:Place
  minus { ?in a o:Resource }
  
  bind (?in as ?r)
  
  ?r rdfs:label ?label 
  	      
  optional { ?r o:thumbnail  ?ic  }
  
  bind (concat(w:, (substr(?r, strlen(r:) + 1))) as ?pr)   

  optional {
    ?in p:longitude ?lon ;
	p:latitude  ?lat
  }
}
]]>
</body>
</rule>

</rdf:RDF>
