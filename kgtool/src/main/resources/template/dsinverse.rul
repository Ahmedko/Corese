<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Thu May 19 16:47:47 CEST 2016
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' 
  xmlns='http://ns.inria.fr/edelweiss/2011/rule#'>
<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template st:profile {}
where {}

function st:aggregate(?x) {
  st:agg_and(?x)
}





]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis){
  sh:safe(?sh, ?shape, ?suc)
}
where {

  graph ?shape {
    ?sh sh:class ?c ; sh:predicate ?p 
  }
  
  ?s ?p ?o
  bind (exists { ?s rdf:type/rdfs:subClassOf* ?c }    as ?suc)
  
  bind (st:report(sh:class, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis){
  sh:safe(?sh, ?shape, ?suc)
}
where {

  graph ?shape {  
    ?sh sh:hasValue ?v ; sh:predicate ?p 
  }
  
  ?s ?p ?o
  bind (coalesce(?s = ?v, false)  as ?suc)
  
  bind (st:report(sh:hasValue, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis){
  sh:safe(?sh, ?shape, ?suc)
}
where {

  graph ?shape {
    ?sh sh:nodeKind ?k ; sh:predicate ?p 
  }
  
  ?s ?p ?o
  bind (sh:hasKind(?s, ?k)  as ?suc)
  
  bind (st:report(sh:nodeKind, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis){
  sh:safe(?sh, ?shape, ?suc)
}
where {

  graph ?shape {
    ?sh sh:classIn ?lc ; sh:predicate ?p                     
 }
  
  ?s ?p ?o
  bind (
    exists { graph ?shape { ?lc rdf:rest*/rdf:first ?c } 
        ?s rdf:type/rdfs:subClassOf* ?c }    
  as ?suc)
  
  bind (st:report(sh:classIn, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis) {
  sh:safe(?sh, ?suc)
}
where {
  graph ?shape {  
    ?sh sh:pattern ?exp ; sh:predicate ?p  
    optional { ?sh sh:flags ?flag }
  }
  ?s ?p ?o
  bind ( 
    coalesce(
        ! isBlank(?s) && 
        if (bound (?flag), regex(?s, ?exp, ?flag), regex(?s, ?exp)), 
        false) 
  as ?suc )

  bind (st:report(sh:pattern, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}


]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis) {
  sh:safe(?sh, ?shape, ?suc)
}
where {
  graph ?shape {  
    ?sh sh:minLength|sh:maxLength ?m ; ?q ?m ; sh:predicate ?p                      
  }
  ?s ?p ?o
  bind ( 
    coalesce(
        ! isBlank(?s) && 
        if (?q = sh:minLength, strlen(?s) >= ?m, strlen(?s) <= ?m), 
        false) 
  as ?suc )

  bind (st:report(?q, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}


]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis){
  sh:safe(?sh, ?shape, ?suc)
}
where {

  graph ?shape {  
    ?sh sh:valueShape ?cst ; sh:predicate ?p 
  }
  
  ?s ?p ?o
  
  bind (sh:testShape(?s, ?cst, ?shape) as ?suc)
  
  bind (st:report(sh:valueShape, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis){
  sh:safe(?sh, ?shape, ?suc)
}
where {

  graph ?shape {  
    ?sh sh:minCount|sh:maxCount ?m ; ?q ?m ; sh:predicate ?p                      
  }

  bind (sh:invCount(?o, ?p) as ?c)  
  bind (if (?q = sh:minCount, ?c >= ?m, ?c <= ?m)    as ?suc)
  
  bind (st:report(?q, ?sh, ?shape, ?o, ?c, ?p, ?o, ?suc, ?vis) as ?b)
}


]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis) {
  sh:safe(?sh, ?shape, ?suc)
}
where {
  graph ?shape {  
    ?sh sh:stem ?exp ; sh:predicate ?p  
  }
  ?s ?p ?o
  bind (isURI(?s) && strstarts(?s, ?exp)
  as ?suc )

  bind (st:report(sh:pattern, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}


]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?sh, ?shape, ?o, ?vis){
  sh:safe(?sh, ?shape, ?suc)
}
where {

  graph ?shape {
    ?sh sh:in ?lv ; sh:predicate ?p                     
  }
  
  ?s ?p ?o
  bind (
    exists { 
        graph ?shape { ?lv rdf:rest*/rdf:first ?v } 
        filter (?s = ?v) }    
  as ?suc)
  
  bind (st:report(sh:in, ?sh, ?shape, ?o, ?s, ?p, ?o, ?suc, ?vis) as ?b)
}

]]>
</body>
</rule>

</rdf:RDF>
