#
# template called by subclass in special case:
# subclassOf(intersectionOf() ?y)
#
template st:interunion {
    xsd:string(if (bound(?t), ?ld, ?lo))
    "(" 
      ibox {
	if (?p = owl:disjointUnionOf, ?in, "") " "
	?x  
      }
    ")" 
}
where {
  ?in ?p ?x 
  optional { ?in a ?t  filter(?t = rdfs:Datatype) }
 }
values (?p ?lo ?ld) {
  (owl:unionOf         "ObjectUnionOf" "DataUnionOf")
  (owl:disjointUnionOf "DisjointUnion" "DisjointUnion")
  (owl:intersectionOf  "ObjectIntersectionOf" "DataIntersectionOf")
}
