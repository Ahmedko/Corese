#
# evaluate sh:property sh:predicate of shape ?sh
# ?ls is the list of target nodes of shape ?sh
# select target nodes in ?ls that match sh:property filter shape if any
#
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?shape, ?sh, ?vis, ?ls) {
   sh:safe(?shape, ?sh, ?suc)
}
where {
    graph ?shape {  
        ?sh sh:property ?cst  
        bind (not exists { ?cst sh:filterShape ?fs } as ?ok)
        values ?oper { sh:predicate sh:path }
        ?cst ?oper ?p 
    }
    bind (if (?ok, ?ls, sh:checkFilter(?ls, ?shape, ?cst)) 
    as ?list)

    bind (funcall(?oper, ?shape, ?cst, ?vis, ?list, ?p) as ?suc)
}


